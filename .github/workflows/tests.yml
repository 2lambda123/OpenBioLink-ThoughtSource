# From https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


defaults:
      run:
        working-directory: ./libs/cot/

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - id: setup_python
      name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - id: python_cache
      uses: actions/cache@v3
      with:
        path: venv
        key: ${{ runner.os }}-pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('setup.cfg') }}
    - if: steps.python_cache.outputs.cache-hit != 'true'
      name: Install dependencies
      run: |
        # Check if venv exists (restored from secondary keys if any, and delete)
        # You might not need this line if you only have one primary key for the venv caching
        # I kept it in my code as a fail-safe
        if [ -d "venv" ]; then rm -rf venv; fi
        
        # Re-create the venv
        python3 -m venv venv

        # Install dependencies
        venv/bin/python3 -m pip install --upgrade pip
        venv/bin/python3 -m pip install flake8 pytest
        venv/bin/python3 -m pip install -e .

      - name: Activate venv on Windows
        if: runner.os == 'Windows'
        run: .\venv\Scripts\activate
      - name: condition 2
        if: runner.os != 'Windows'
        run: source venv/bin/activate
    - name: Test with pytest
      run: |
        make tests